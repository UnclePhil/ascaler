version: "3.7"

networks:
  ascaler:

configs:
  prometheus_config:
    file: ./config/prometheus.yml

services:
  ascaler:
    image: unclephil/ascaler:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - CPU_UPPER_LIMIT=85
      - CPU_LOWER_LIMIT=25
      - WAIT_TIME=60s 
    networks:
      - ascaler
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.10'
          memory: 128M
        reservations:
          cpus: '0.10'
          memory: 64M
  cadvisor:
    image: google/cadvisor:${CADVISOR_VERSION:-v0.25.0}
    networks:
      - ascaler
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 128M
        reservations:
          cpus: '0.10'
          memory: 64M

  prometheus:
    image: prom/prometheus:v2.12.0
    networks:
      - ascaler
    command: ["--storage.tsdb.retention.size=1GB", "--config.file=/etc/prometheus/prometheus.yml", "--web.console.libraries=/etc/prometheus/console_libraries", "--web.console.templates=/etc/prometheus/consoles", "--web.enable-lifecycle"]
    configs:
       - source: prometheus_config
         target: /etc/prometheus/prometheus.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.50'
          memory: 128M
